[{"C:\\Users\\Viljami\\Desktop\\Full-Stack-MOOC\\osa2\\puhelinluettelo\\src\\index.js":"1","C:\\Users\\Viljami\\Desktop\\Full-Stack-MOOC\\osa2\\puhelinluettelo\\src\\App.js":"2","C:\\Users\\Viljami\\Desktop\\Full-Stack-MOOC\\osa2\\puhelinluettelo\\src\\services\\persons.js":"3"},{"size":134,"mtime":1687786907632,"results":"4","hashOfConfig":"5"},{"size":4737,"mtime":1688561924716,"results":"6","hashOfConfig":"5"},{"size":683,"mtime":1688404124827,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8nrpq9",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"C:\\Users\\Viljami\\Desktop\\Full-Stack-MOOC\\osa2\\puhelinluettelo\\src\\index.js",[],[],"C:\\Users\\Viljami\\Desktop\\Full-Stack-MOOC\\osa2\\puhelinluettelo\\src\\App.js",["19"],[],"import { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport './index.css'\n\nconst Ilmoitus = ({message,onnistuiko}) => {\n  if (message === null) {\n    return null \n  }\n  switch(onnistuiko) {\n    case false:\n      return (\n          <div className='error'>\n            {message}\n          </div>\n        )\n    case true:\n      return (\n        <div className='onnistui'>\n          {message}\n        </div>\n      )\n    default:\n      console.log(\"hölömö\")\n  }\n}\n\nconst Filter = (props) => {\n  return (\n    <div>\n      filter shown with:<input value={props.filter} onChange = {props.funktio}/>\n    </div>\n    \n  )\n}\n\nconst Persons = (props) => {\n  const persons = props.persons\n  const newFilter = props.filter\n\n  return ( \n    <div >\n      {persons.filter((henkilo) =>\n       henkilo.name.toLowerCase().includes(newFilter.toLowerCase()))\n       .map((person)=>\n       <p key={person.name}>{person.name} {person.number} <button onClick={(e) => props.poista(person.id)}>delete</button> </p>)}\n    </div >\n  )\n}\n\nconst PersonForm = (props) => {\n\n  return (\n  <form onSubmit={props.lisaaNimiFunktio}>\n    <div>\n      name: <input value={props.nimi} onChange={props.funktioNimi}/>\n    </div>\n    <div>\n      number: <input value={props.numero} onChange={props.funktioNumero}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [onnistuiko, setOnnistuiko] = useState(true)\n\n\n  useEffect(() => {\n    personService\n    .getAll()\n    .then(persons => setPersons(persons))\n    }\n  ,[])\n\n  const lisaaNimi = (event) => {\n    event.preventDefault()\n    let henkilo = {}\n    if (henkilo = persons.find(olio => olio.name === newName )) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with new one?`)) {\n        \n        const muokattu = {\n          name: henkilo.name,\n          number: newNumber,\n          id: henkilo.id\n        }\n        personService.muutaHenkilo(henkilo.id, muokattu).then(person => {\n          setPersons(persons.map(henkilo => henkilo.id === person.id ? muokattu : henkilo))},\n          setErrorMessage(`${henkilo.name} number has changed to ${newNumber}`),\n          setOnnistuiko(true),\n          setTimeout(() => {\n            setErrorMessage(null)\n          },5000)\n        )\n        .catch(error => {\n          setErrorMessage(`${error.response.data.error}`)\n          setOnnistuiko(false)\n        setTimeout(() => {\n          setErrorMessage(null)\n        },5000)\n        //setPersons(persons.filter(h => h.id !== henkilo.id))\n        //setOnnistuiko(false)\n      })\n        return\n      }\n\n      else {\n        return\n      }\n      \n    }\n    \n    const ihminen = {\n      name: newName,\n      number: newNumber\n    }\n\n    personService.createPerson(ihminen).then(uusi => {\n      setPersons(persons.concat(uusi))},\n      setOnnistuiko(true),\n      setErrorMessage(`${newName} was added to phonebook`),\n      setTimeout(() => {\n        setErrorMessage(null)\n      },5000))\n      .catch(error => {\n        setOnnistuiko(false)\n        setErrorMessage(`${error.response.data.error}`)\n        console.log(error.response.data)\n        setTimeout(() => {\n          setErrorMessage(null)\n        },5000)\n      })\n  }\n\n  const poista =(id)=> {\n\n    personService.poistaHenkilo(id).then(() => {\n      setOnnistuiko(true)},\n      setErrorMessage(`'${(persons.find(henkilo => henkilo.id === id)).name}' was deleted`), \n      setPersons(persons.filter(person => person.id !== id)),\n      setTimeout(() => {\n        setErrorMessage(null)\n      },5000))\n      .catch(error => {\n      setOnnistuiko(false)\n      setErrorMessage(`Person was already removed from server`)\n    setTimeout(() => {\n      setErrorMessage(null)\n    },5000)\n    setPersons(persons.filter(h => h.id !== id))\n  })\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Ilmoitus message ={errorMessage} onnistuiko={onnistuiko}></Ilmoitus>\n      <div>\n        <Filter funktio= {e => setFilter(e.target.value)} filter ={newFilter}></Filter>\n      </div>\n      <h3>add a new</h3>\n        <PersonForm \n        nimi={newName}\n        numero={newNumber}\n        funktioNumero={e => setNewNumber(e.target.value)}\n        funktioNimi = {e => setNewName(e.target.value)}\n        lisaaNimiFunktio={lisaaNimi}\n         ></PersonForm>\n      <h2>Numbers</h2>\n        <Persons persons = {persons} filter = {newFilter} poista={poista}></Persons>\n    </div>\n  )\n\n}\n\nexport default App","C:\\Users\\Viljami\\Desktop\\Full-Stack-MOOC\\osa2\\puhelinluettelo\\src\\services\\persons.js",["20"],[],"import axios from 'axios'\r\nconst baseUrl = '/api/persons' \r\n\r\nconst getAll = () => {\r\n    const pyynto =  axios.get(baseUrl)\r\n    return pyynto.then(response => response.data)\r\n}\r\n\r\nconst createPerson = henkilo => {\r\n    const pyynto = axios.post(baseUrl,henkilo)\r\n    return pyynto.then(response => response.data)\r\n}\r\n\r\nconst poistaHenkilo = id => {\r\n    const pyynto = axios.delete(`${baseUrl}/${id}`)\r\n    return pyynto.then((response) => response.data)\r\n}\r\n\r\nconst muutaHenkilo =(id, henkilo) => {\r\n    const pyynto = axios.put(`${baseUrl}/${id}`,henkilo)\r\n    return pyynto.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, createPerson, poistaHenkilo, muutaHenkilo}",{"ruleId":"21","severity":1,"message":"22","line":86,"column":9,"nodeType":"23","messageId":"24","endLine":86,"endColumn":63},{"ruleId":"25","severity":1,"message":"26","line":24,"column":1,"nodeType":"27","endLine":24,"endColumn":67},"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]